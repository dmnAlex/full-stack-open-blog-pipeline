name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  deployment_pipeline:
    runs-on: ubuntu-18.04
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
      SECRET: ${{ secrets.SECRET }}
      PORT: 3001
      SKIP_PREFLIGHT_CHECK: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: npm install
        run: npm install && cd ./client && npm install
      - name: lint
        if: ${{ !contains(join(github.event.commits.*.message, ' '), '#st') }}
        run: npm run lint && cd ./client && npm run eslint
      - name: build
        run: cd ./client && npm run build
      - name: test
        if: ${{ !contains(join(github.event.commits.*.message, ' '), '#st') }}
        run: npm run test && cd ./client && npm run test
      - name: e2e tests
        if: ${{ !contains(join(github.event.commits.*.message, ' '), '#st') }}
        uses: cypress-io/github-action@v2
        with:
          start: npm run start:test
          command: npm run e2e
          wait-on: http://localhost:${{env.PORT}}
      - name: deploy to heroku
        id: deploy_step
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#sd') }}
        uses: akhileshns/heroku-deploy@v3.8.8
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "dmnalex-blog-pipeline"
          heroku_email: "logical@ngs.ru"
          healthcheck: "https://dmnalex-blog-pipeline.herokuapp.com/api/health"
          checkstring: "ok"
          rollbackonhealthcheckfailed: true
        env:
          HD_MONGODB_URI: ${{ secrets.MONGODB_URI }}
          HD_SECRET: ${{ secrets.SECRET }}
          HD_SKIP_PREFLIGHT_CHECK: true
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#sd') }}
        uses: anothrNick/github-tag-action@18284c78f6ac68868d5341f57c4f971fb5b7605c
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
      - name: deployment notification
        if: ${{ steps.deploy_step.conclusion == 'success' && !contains(join(github.event.commits.*.message, ' '), '#sn') }}
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: commit, author, took
          custom_payload: |
            {
              attachments: [{
                color: "good",
                text: `a new version deployed to https://dmnalex-blog-pipeline.herokuapp.com/ (${process.env.AS_COMMIT}) by ${process.env.AS_AUTHOR} build took ${process.env.AS_TOOK}`
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: error notification
        if: ${{ failure() && !contains(join(github.event.commits.*.message, ' '), '#sn') }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo, message, commit, author, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}